#!/usr/bin/env bash

#: exec_target = cli

## Initialize/reinstall site
##
## Usage: fin init-site

# Abort if anything fails
set -e

SOURCE="${BASH_SOURCE[0]}"
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
. $DIR/helper_functions

#-------------------------- Settings --------------------------------

PROCESS=${1:-install}
# PROJECT_ROOT and DOCROOT are set as env variables in cli
SITE_DIRECTORY=${SITE_DIRECTORY:-default}
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
	local source="$1"
	local dest="$2"

	if [[ ! -f $dest ]]; then
		echo-green "Copying ${dest}..."
		cp $source $dest
	else
		echo-yellow "${dest} already in place."
	fi
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Functions --------------------------------

# Initialize local settings files
init_settings ()
{
  if [ ${FRAMEWORK} ==  'd7' ] || [ ${FRAMEWORK} == 'd8' ]; then
	 	# Copy from settings templates
	 	copy_settings_file "/var/www/.docksal/etc/framework/${FRAMEWORK}/settings.php" "${SITEDIR_PATH}/settings.php"
  elif [ ${FRAMEWORK} == 'wp' ]; then
    copy_settings_file "/var/www/.docksal/etc/framework/${FRAMEWORK}/wp-config.php" "${DOCROOT_PATH}/wp-config.php"
  fi
}

# Fix file/folder permissions
fix_permissions ()
{
	if [ ${FRAMEWORK} ==  'd7' ] || [ ${FRAMEWORK} == 'd8' ]; then
		echo "Making site directory writable..."
	  mkdir -p "${SITEDIR_PATH}/files/private"
		chmod 755 "${SITEDIR_PATH}"
		chmod 755 "${SITEDIR_PATH}/files/private"
	fi
}

# Install site
site_install ()
{
	cd $DOCROOT_PATH

	if [ ${FRAMEWORK} ==  'd7' ] || [ ${FRAMEWORK} == 'd8' ]; then
		drush site-install -y \
			--site-name=${SITE_NAME} \
			--account-mail=${ADMIN_EMAIL} \
			--account-name=${ADMIN_NAME} \
			--account-pass=${ADMIN_PASS}
	elif [ ${FRAMEWORK} == 'wp' ]; then
		wp core install \
			--url=${VIRTUAL_HOST} \
			--title=${SITE_NAME} \
			--admin_user=${ADMIN_USER} \
			--admin_password=${ADMIN_PASS} \
			--admin_email=${ADMIN_EMAIL}
	fi
}

#-------------------------- END: Functions --------------------------------

#-------------------------- Execution --------------------------------

mkdir ~/tmp
chmod 755 ~/tmp
sudo localedef -i en_US -f UTF-8 en_US.UTF-8

fix_permissions
# Project initialization steps
case "${HOSTING}" in
	'pantheon'*)
		${DIR}/terminus install
		;;
	'platform.sh'*)
		${DIR}/platform.sh install
		;;
esac

init_settings

case "${CMD}" in
	'install'*)
		site_install()
		;;
	'recreate'*)
		${DIR}/refresh
		;;
esac

#-------------------------- END: Execution --------------------------------
